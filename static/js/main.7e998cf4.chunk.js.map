{"version":3,"sources":["logo.svg","Context/UserContext.js","Components/UserCard.js","Components/Repo.js","pages/Home.js","pages/Signin.js","pages/NotFound.js","pages/Signup.js","layout/Footer.js","layout/Navbar.js","App.js","FirebaseConfig/Configuration.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","createContext","UserCard","user","Card","className","src","avatar_url","height","width","CardBody","style","fontSize","float","name","location","followers","hireable","Repo","color","map","repo","CardTitle","CardText","href","Home","context","useContext","url","useState","setName","setUser","setRepo","handleSubmit","a","Axios","get","catch","err","response","status","Error","config","data","repos_url","repodata","console","log","toast","type","Container","fluid","Row","Col","placeholder","value","onChange","e","target","onClick","id","to","Signin","email","setEmail","password","setPassword","uid","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","error","message","CardHeader","FormGroup","row","Label","for","sm","Input","CardFooter","Button","block","NotFound","Signup","createUserWithEmailAndPassword","Footer","tag","NavBar","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","cursor","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e998cf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nconst UserContext=React.createContext();\r\n\r\nexport default UserContext;","import React from 'react';\r\nimport {Card,CardBody,Row,Col} from 'reactstrap';\r\n\r\nconst UserCard=({user})=>{\r\n    return(\r\n        <Card className=\"text-center\" >\r\n            {/* <Row> */}\r\n                {/* <Col className=\"md-2\"> */}\r\n                <img src={user.avatar_url} className=\"img-thumbnail\" height=\"300\" width=\"500\"/>\r\n                {/* </Col> */}\r\n                {/* <Col > */}\r\n                <CardBody className=\"md-4 mt-3\" style={{fontSize:\"20px\",float:\"left\"}}>\r\n                <div >Name:{user.name}</div>\r\n                <div >Location:{user.location}</div>\r\n                <div >Followers:{user.followers}</div>\r\n                <div >Hireable:{user.hireable?\"Yes\":\"Not Mentioned\"}</div>\r\n                </CardBody>\r\n                {/* </Col> */}\r\n            {/* </Row>    */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserCard;","import React from 'react';\r\nimport {Card, CardTitle,CardText, CardBody} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nconst Repo=({user})=>{\r\n    \r\n    return(\r\n        <div className=\"mb-5\">\r\n        <h1 color=\"success\">Repositories</h1>\r\n        \r\n            {\r\n                user.map(repo=>(\r\n                    <Card>\r\n                    <CardBody>\r\n                        <CardTitle>Project Name: {repo.name}</CardTitle>\r\n                        <CardText><a href={`https://sreeramthatavarthi.github.io/${repo.name}`}>Project link</a></CardText>\r\n                    </CardBody>\r\n                    </Card>\r\n                ))\r\n            }\r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default Repo;","import React,{useState, useContext} from 'react';\r\nimport { CardTitle,CardBody,Card,Container,Row,Col, Input, Button } from 'reactstrap';\r\nimport Axios from 'axios';\r\nimport UserContext from '../Context/UserContext';\r\nimport UserCard from '../Components/UserCard';\r\nimport Repo from '../Components/Repo';\r\nimport { toast } from 'react-toastify';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home=()=>{\r\n    const context=useContext(UserContext);\r\n    let url=\"https://api.github.com/users/\";\r\n    const [name,setName]=useState(\"\");\r\n    const [user,setUser]=useState([]);\r\n    const [repo,setRepo]=useState([]);\r\n    const handleSubmit=async ()=>{\r\n        url=`${url}${name}`\r\n        setName(\"\");\r\n        try{\r\n            const {data}=await Axios.get(url).catch(err => {\r\n                if (err.response.status === 404) {\r\n                  throw new Error(`${err.config.url} not found`);\r\n                }\r\n                throw err;\r\n            });\r\n            const {repos_url}=data;\r\n        const repodata=await Axios.get(repos_url);\r\n        setRepo(repodata.data)\r\n        setUser(data);\r\n        console.log(data);\r\n        }\r\n        catch(err){\r\n            toast(\"User Id Not Found\",{type:\"error\"});\r\n        }  \r\n    }\r\n    if(!context.user){\r\n        return <Redirect to=\"/git/signin\"/>\r\n    }\r\n    return(\r\n        <Container fluid>\r\n             \r\n        <Row>\r\n             <Col className=\"md-6\">\r\n             <div className=\"input-group mb-3 mt-4\" style={{width:\"400px\"}}>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter GitHub Id\"\r\n                value={name}\r\n                onChange={(e)=>setName(e.target.value)}/>\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn  btn-primary\" type=\"button\" onClick={handleSubmit}>Submit</button>\r\n                </div>\r\n                </div>\r\n                {\r\n                        user.id?(<UserCard user={user}/>):\"\"\r\n                    }\r\n                </Col>    \r\n                <Col className=\"md-6\">\r\n                    {\r\n                        user.id?(<Repo user={repo}/>):\"\"\r\n                    }\r\n               </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React, { useContext, useState } from 'react';\r\nimport {Container,Row,Col,Card,CardBody,CardHeader,CardFooter,Form,FormGroup,Button,Label,Input} from 'reactstrap';\r\nimport firebase from 'firebase/app';\r\nimport UserContext from '../Context/UserContext';\r\nimport {toast} from 'react-toastify';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst Signin=()=>{\r\n    const context=useContext(UserContext);\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const handleSignin=()=>{\r\n        firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email,password)\r\n        .then(res=>{\r\n            console.log(res);\r\n            context.setUser({email:res.user.email,uid:res.user.uid})\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            toast(error.message,{type:\"error\"});\r\n        })\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        handleSignin();\r\n    }\r\n    if(context.user?.uid){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\tNote:SignIn is required.\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignIn here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nconst NotFound=()=>{\r\n    return(\r\n        <h1>Page Not Found</h1>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { useContext, useState } from 'react';\r\nimport {Container,Row,Col,Card,CardBody,CardHeader,CardFooter,Form,FormGroup,Button,Label,Input} from 'reactstrap';\r\nimport firebase from 'firebase/app';\r\nimport UserContext from '../Context/UserContext';\r\nimport {toast} from 'react-toastify';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst Signup=()=>{\r\n    const context=useContext(UserContext);\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const handleSignup=()=>{\r\n        firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email,password)\r\n        .then(res=>{\r\n            console.log(res);\r\n            context.setUser({email:res.user.email,uid:res.user.uid})\r\n        })\r\n        .catch(error=>{\r\n\t\t\tconsole.log(error);\r\n            toast(error.message,{type:\"error\"});\r\n        })\r\n    }\r\n    \r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        handleSignup();\r\n    }\r\n    if(context.user?.uid){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignUp here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nconst Footer=()=>{\r\n    return(\r\n        <Container fluid tag=\"footer\" className=\"text-center bg-info text-white text-uppercase fixed-bottom p-3\">\r\n            Siri GITHUB Search App with FireBase\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useContext, useState } from 'react';\r\nimport {Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,NavbarText} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport UserContext from '../Context/UserContext';\r\n\r\nconst NavBar=()=>{\r\n    const context=useContext(UserContext);\r\n    const [isOpen,setIsOpen]=useState(false);\r\n    const changeOpen=()=>setIsOpen(!isOpen)\r\n    return(\r\n        <Navbar color=\"info\" light expand=\"md\">\r\n            <NavbarBrand>\r\n                <Link to=\"/\" className=\"text-white\">Github with Firebase</Link>\r\n            </NavbarBrand>\r\n            <NavbarText>\r\n                {\r\n                    context.user?.email ? context.user.email:\"\"\r\n                }\r\n            </NavbarText>\r\n            <NavbarToggler onClick={changeOpen}/>\r\n            <Collapse isOpen={isOpen} navbar>\r\n               <Nav className=\"ml-auto\" navbar>\r\n                   {\r\n                       context.user?(\r\n                        <>\r\n                        <NavItem>\r\n                            <NavLink  style={{cursor:'pointer'}}  onClick={()=>context.setUser(null)} className=\"text-white\">Signout</NavLink>\r\n                        </NavItem>\r\n                        </>\r\n                       ):(\r\n                        <>\r\n                        <NavItem>\r\n                          <NavLink tag={Link} to=\"/git/signup\" className=\"text-white\">Signup</NavLink>\r\n                         </NavItem>\r\n                        <NavItem>\r\n                           <NavLink tag={Link} to=\"/git/signin\" className=\"text-white\">Signin</NavLink>\r\n                        </NavItem>\r\n                        </> \r\n                   )\r\n                   }\r\n                   \r\n                   \r\n               </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {toast,ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport UserContext from './Context/UserContext';\nimport { Switch,Route,BrowserRouter as Router,Link } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Signin from './pages/Signin';\nimport NotFound from './pages/NotFound';\nimport Signup from './pages/Signup';\nimport Footer from './layout/Footer';\nimport NavBar from './layout/Navbar';\nimport FireBaseConfig from './FirebaseConfig/Configuration';\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport './App.css';\n\n\nfirebase.initializeApp(FireBaseConfig);\n\nconst App=()=>{\n  const [user,setUser]=useState(null);\n  return(\n    <Router>\n      <ToastContainer/>\n      <UserContext.Provider value={{user,setUser}}>\n        <NavBar/>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/git/signin\" component={Signin}/>\n          <Route exact path=\"/git/signup\" component={Signup}/>\n          <Route exact path=\"*\" component={NotFound}/>\n        </Switch>\n        <Footer/>\n      </UserContext.Provider>\n   </Router>\n  );\n}\nexport default App;\n","export default {\r\n  apiKey: \"AIzaSyD_R706OcnKZ74gP9pFtxwq6Vl09llIBrs\",\r\n  authDomain: \"git-app-890e2.firebaseapp.com\",\r\n  databaseURL: \"https://git-app-890e2.firebaseio.com\",\r\n  projectId: \"git-app-890e2\",\r\n  storageBucket: \"git-app-890e2.appspot.com\",\r\n  messagingSenderId: \"146086151419\",\r\n  appId: \"1:146086151419:web:88624d08c0fd927a7edc5e\",\r\n  measurementId: \"G-5JV69HB3XV\"\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}